package Seguridad;

import java.io.*;
import java.math.BigInteger;
import java.security.*;
import java.security.cert.*;
import java.util.*;
import org.bouncycastle.x509.*;

public class CertificadoDigital {

	public static PublicKey darLlavePublica(byte[] certEnBytes){	
		try {
			InputStream inStream = new ByteArrayInputStream(certEnBytes);
			CertificateFactory certFactory = CertificateFactory.getInstance("X.509");
			X509Certificate certificado = (X509Certificate) certFactory.generateCertificate(inStream);
			inStream.close();
			return certificado.getPublicKey();
		} catch (Exception e) {
			System.err.println("Llave Publica Exception: " + e.getMessage());
		}  
		return null;
	}

	public void generarCertificado(PublicKey llavePublica){
		Date startDate = new Date(System.currentTimeMillis());              // time from which certificate is valid
		Date expiryDate = new Date(2015, 1, 1);             // time after which certificate is not valid
		BigInteger serialNumber = BigInteger.ONE;     // serial number for certificate
		X509V1CertificateGenerator certGen = new X509V1CertificateGenerator();
		X500Principal              dnName = new X500Principal("CN=Test CA Certificate");
		certGen.setSerialNumber(serialNumber);
		certGen.setIssuerDN(dnName);
		certGen.setNotBefore(startDate);
		certGen.setNotAfter(expiryDate);
		certGen.setSubjectDN(dnName);                       // note: same as issuer
		certGen.setPublicKey(keyPair.getPublic());
		certGen.setSignatureAlgorithm(signatureAlgorithm);
		X509Certificate cert = certGen.generate(pair.getPrivate(), "BC");
	}
}
